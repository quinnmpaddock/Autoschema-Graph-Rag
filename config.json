{
  "neo4j": {
    "uri": "bolt://localhost:7687",
    "username": "neo4j",
    "password": "admin2025",
    "database_name": "test-db"
  },
  "settings": {
    "batch_size": 1000,
    "max_transaction_retry_time": 30,
    "connection_timeout": 10,
    "incremental": false,
    "max_workers": 4,
    "validate_files": true,
    "create_constraints": true,
    "clear_database": false
  },
  "file_locations": {
    "base_directory": "./import-TEST/ATLAS-docs",
    "subdirectories": {
      "triples": "triples_csv",
      "concepts": "concept_csv"
    }
  },
  "file_mappings": {
    "triple_nodes": {
      "filename": "triple_nodes_docs_from_json_without_emb_with_numeric_id.csv",
      "id_column": "name:ID",
      "label_column": ":LABEL",
      "expected_headers": [
        "name:ID",
        "type",
        "concepts",
        "synsets",
        "numeric_id",
        ":LABEL"
      ],
      "property_columns": [
        "type",
        "concepts",
        "synsets",
        "numeric_id"
      ],
      "enabled": true,
      "custom_path": null
    },
    "text_nodes": {
      "filename": "text_nodes_docs_from_json_with_numeric_id.csv",
      "id_column": "text_id:ID",
      "label_column": ":LABEL",
      "expected_headers": [
        "text_id:ID",
        "original_text",
        "numeric_id",
        ":LABEL"
      ],
      "property_columns": [
        "original_text",
        "numeric_id"
      ],
      "enabled": true,
      "custom_path": null
    },
    "concept_nodes": {
      "filename": "concept_nodes_docs_from_json_with_concept.csv",
      "id_column": "concept_id:ID",
      "label_column": ":LABEL",
      "expected_headers": [
        "concept_id:ID",
        "name",
        ":LABEL"
      ],
      "property_columns": [
        "name"
      ],
      "enabled": true,
      "custom_path": null
    },
    "triple_edges": {
      "filename": "triple_edges_docs_from_json_without_emb_with_numeric_id.csv",
      "expected_headers": [
        ":START_ID",
        ":END_ID",
        "relation",
        "concepts",
        "synsets",
        "numeric_id",
        ":TYPE"
      ],
      "property_columns": [
        "relation",
        "concepts",
        "synsets",
        "numeric_id"
      ],
      "start_id_field": "name:ID",
      "end_id_field": "name:ID",
      "enabled": true,
      "custom_path": null
    },
    "text_edges": {
      "filename": "text_edges_docs_from_json.csv",
      "expected_headers": [
        ":START_ID",
        ":END_ID",
        ":TYPE"
      ],
      "property_columns": [],
      "start_id_field": "name:ID",
      "end_id_field": "text_id:ID",
      "enabled": true,
      "custom_path": null
    },
    "concept_edges": {
      "filename": "concept_edges_docs_from_json_with_concept.csv",
      "expected_headers": [
        ":START_ID",
        ":END_ID",
        "relation",
        ":TYPE"
      ],
      "property_columns": [
        "relation"
      ],
      "start_id_field": "name:ID",
      "end_id_field": "concept_id:ID",
      "enabled": true,
      "custom_path": null
    }
  },
  "logging": {
    "level": "INFO",
    "file": "knowledge_graph_import.log",
    "format": "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  },
  "constraints": {
    "enabled": true,
    "definitions": [
      {
        "type": "constraint",
        "label": "Node",
        "property": "name",
        "statement": "CREATE CONSTRAINT IF NOT EXISTS FOR (n:Node) REQUIRE n.name IS UNIQUE"
      },
      {
        "type": "constraint",
        "label": "Text",
        "property": "text_id",
        "statement": "CREATE CONSTRAINT IF NOT EXISTS FOR (n:Text) REQUIRE n.text_id IS UNIQUE"
      },
      {
        "type": "constraint",
        "label": "Concept",
        "property": "concept_id",
        "statement": "CREATE CONSTRAINT IF NOT EXISTS FOR (n:Concept) REQUIRE n.concept_id IS UNIQUE"
      },
      {
        "type": "index",
        "label": "Node",
        "property": "name",
        "statement": "CREATE INDEX IF NOT EXISTS FOR (n:Node) ON (n.name)"
      },
      {
        "type": "index",
        "label": "Text",
        "property": "text_id",
        "statement": "CREATE INDEX IF NOT EXISTS FOR (n:Text) ON (n.text_id)"
      },
      {
        "type": "index",
        "label": "Concept",
        "property": "concept_id",
        "statement": "CREATE INDEX IF NOT EXISTS FOR (n:Concept) ON (n.concept_id)"
      }
    ]
  }
}
